/*! microplugin.js | https://github.com/brianreavis/microplugin.js | Apache License (v2) */
"use strict";function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var isArray=_interopDefault(require("es-is/array"));const MicroPlugin={};MicroPlugin.mixin=function(e){e.plugins={};e.prototype.initializePlugins=function(e){var i,n,r;var t=this;var s=[];t.plugins={names:[],settings:{},requested:{},loaded:{}};if(isArray(e)){for(i=0,n=e.length;i<n;i++){if(typeof e[i]==="string"){s.push(e[i])}else{t.plugins.settings[e[i].name]=e[i].options;s.push(e[i].name)}}}else if(e){for(r in e){if(e.hasOwnProperty(r)){t.plugins.settings[r]=e[r];s.push(r)}}}while(s.length){t.require(s.shift())}};e.prototype.loadPlugin=function(i){var n=this;var r=n.plugins;var t=e.plugins[i];if(!e.plugins.hasOwnProperty(i)){throw new Error('Unable to find "'+i+'" plugin')}r.requested[i]=true;r.loaded[i]=t.fn.apply(n,[n.plugins.settings[i]||{}]);r.names.push(i)};e.prototype.require=function(e){var i=this;var n=i.plugins;if(!i.plugins.loaded.hasOwnProperty(e)){if(n.requested[e]){throw new Error('Plugin has circular dependency ("'+e+'")')}i.loadPlugin(e)}return n.loaded[e]};e.define=function(i,n){e.plugins[i]={name:i,fn:n}}};module.exports=MicroPlugin;